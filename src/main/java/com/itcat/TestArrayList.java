package com.itcat;

/**
 * 11-ArrayList、LinkedList的区别
 *
 * 1.底层数据结构的差异
 *   ArrayList底层数据结构是一个数组，是连续一块的内存空间
 *   LinkedList底层数据结构是一个双向链表，不是连续的内存空间
 * 2.一个常规的结论(不严谨的情况下)
 *   ArrayList，因为是一个连续的内存空间，其方便寻址，查找速度快，但是删除和插入数据较慢(需要发生数据迁移)
 *   LinkedList,因为需要通过指针逐个寻找，其查找速度慢，但是删除和插入数据较快(只需要改变前后节点的指针指向即可，
 *   并且LinkedList有两个指针，一个指向头部，一个指向尾部，方便数据插入)
 * 3.确定要存储1000个对象信息，采用上述那种数据结构更省内存？
 *   采用ArrayList更省内存。因为初始化好空间，确定的内存大小就是1000，可以避免后期扩容，而且LinkedList属于双向链表，除了存储数据外，还需要存储前后指针
 * 4.ArrayList如何扩容？
 *   ArrayList底层是连续的长度固定的内存空间
 *   数组的初始化容量大小为10
 *   其扩容方式为：
 *   (1)创建一个新数组，新数组的长度是原数组的1.5倍(通过位运算可以快速得到原数组的1.5倍)
 *   (2)将原数组的数据在迁移到新数组中
 */
public class TestArrayList {
}
